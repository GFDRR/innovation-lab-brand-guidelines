%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.3 (Build 15D21) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 432 114
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 432 114
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
218.56032 69.806076 m
218.56032 69.806076 218.24681 69.429008 217.62202 68.802017 c
214.17358 65.544312 209.40979 63.849686 204.70956 63.849686 c
195.80676 63.849686 188.53502 71.123627 188.53502 80.024239 c
188.53502 97.827644 l
188.53502 106.73044 195.80676 114 204.70956 114 c
209.40979 114 215.55252 111.93269 218.56032 108.04361 c
218.87599 107.60516 219.00096 107.23028 219.00096 106.85321 c
219.00096 105.78777 218.05829 104.91086 217.05641 104.91086 c
216.55658 104.91086 216.05455 105.16297 215.67967 105.6628 c
215.67967 105.6628 215.42537 105.91492 215.05049 106.29198 c
212.29262 108.92271 208.46712 110.23807 204.70956 110.23807 c
197.87407 110.23807 192.29695 104.65874 192.29695 97.827644 c
192.29695 80.024239 l
192.29695 73.190941 197.87407 67.611618 204.70956 67.611618 c
208.40573 67.611618 213.16953 69.179092 215.67967 72.189072 c
216.05455 72.688911 216.55658 72.877441 217.05641 72.877441 c
218.12405 72.877441 219.12592 72.000534 219.12592 70.996475 c
219.12592 70.621597 218.93738 70.183151 218.56032 69.806076 c
h
229.14699 95.946457 m
231.27788 98.268066 234.28786 99.896927 237.60915 99.896927 c
244.37886 99.896927 249.83542 94.440369 249.83542 87.672836 c
249.83542 66.357422 l
249.83542 65.105637 248.89275 64.478645 247.95445 64.478645 c
247.01178 64.478645 246.07349 65.105637 246.07349 66.357422 c
246.07349 87.672836 l
246.07349 92.373062 242.31155 96.134995 237.60915 96.134995 c
232.90892 96.134995 229.14699 92.373062 229.14699 87.672836 c
229.14699 66.357422 l
229.14699 65.105637 228.20651 64.478645 227.26602 64.478645 c
226.32773 64.478645 225.38506 65.105637 225.38506 66.357422 c
225.38506 111.49402 l
225.38506 112.74799 226.32773 113.3728 227.26602 113.3728 c
228.20651 113.3728 229.14699 112.74799 229.14699 111.49402 c
229.14699 95.946457 l
h
275.09033 82.405258 m
267.00308 80.651443 l
262.67773 79.71096 259.85626 77.203011 259.85626 74.006683 c
259.85626 70.119789 262.86627 67.611839 267.44153 67.611839 c
271.83044 67.611839 275.09033 70.558243 275.09033 74.633667 c
275.09033 82.405258 l
h
267.5051 63.849907 m
261.54871 63.849907 256.09653 67.361916 256.09653 73.943108 c
256.09653 80.21299 261.36017 83.282166 267.06665 84.474762 c
275.09033 86.167191 l
275.09033 89.115791 l
275.09033 93.31398 272.70734 96.135429 267.63007 96.135429 c
265.24927 96.135429 263.68179 95.383484 262.36423 94.379425 c
261.11026 93.377556 260.79675 92.373497 259.48138 92.373497 c
258.54092 92.373497 257.664 93.12764 257.664 94.190887 c
257.664 94.879265 258.10245 95.508446 258.54092 96.008278 c
260.79675 98.579811 264.18161 99.897362 267.63007 99.897362 c
274.71329 99.897362 278.85226 95.383484 278.85226 89.115791 c
278.85226 74.633667 l
278.85226 68.177444 273.58426 63.849907 267.5051 63.849907 c
h
292.38449 63.850124 m
292.19595 63.850124 291.88245 63.850124 291.63254 63.977276 c
291.63254 63.977276 291.25546 64.100044 290.62848 64.538498 c
287.37076 66.610191 286.05322 70.558464 286.05322 74.318199 c
286.05322 111.49249 l
286.05322 112.74866 286.99368 113.37345 287.93417 113.37345 c
288.87247 113.37345 289.81516 112.74866 289.81516 111.49249 c
289.81516 74.318199 l
289.81516 72.000977 290.56711 68.552536 293.01147 67.484901 c
293.827 67.110023 294.20187 66.421654 294.20187 65.731087 c
294.20187 64.790611 293.44992 63.850124 292.38449 63.850124 c
h
304.91724 63.850124 m
304.7287 63.850124 304.41522 63.850124 304.16528 63.977276 c
304.16528 63.977276 303.78821 64.100044 303.16122 64.538498 c
299.90353 66.610191 298.58597 70.558464 298.58597 74.318199 c
298.58597 111.49249 l
298.58597 112.74866 299.52646 113.37345 300.46695 113.37345 c
301.40521 113.37345 302.3479 112.74866 302.3479 111.49249 c
302.3479 74.318199 l
302.3479 72.000977 303.09985 68.552536 305.54422 67.484901 c
306.35974 67.110023 306.73462 66.421654 306.73462 65.731087 c
306.73462 64.790611 305.98267 63.850124 304.91724 63.850124 c
h
331.49411 87.671959 m
331.49411 92.374374 327.73218 96.134117 323.03195 96.134117 c
318.32953 96.134117 314.5676 92.374374 314.5676 87.671959 c
314.5676 85.164009 l
331.49411 85.164009 l
331.49411 87.671959 l
h
333.37506 81.404266 m
314.5676 81.404266 l
314.5676 76.074867 l
314.5676 71.560989 318.83157 67.612717 323.65894 67.612717 c
326.04193 67.612717 328.92477 68.301086 330.74216 70.622696 c
331.1806 71.183914 331.80759 71.436028 332.30963 71.436028 c
333.31149 71.436028 334.25198 70.622696 334.25198 69.618637 c
334.25198 69.24157 334.12701 68.803116 333.87711 68.428238 c
331.49411 65.293297 327.48224 63.850784 323.65894 63.850784 c
317.07556 63.850784 310.80566 69.177994 310.80566 76.074867 c
310.80566 87.671959 l
310.80566 94.441681 316.26224 99.896049 323.03195 99.896049 c
329.80386 99.896049 335.25604 94.441681 335.25604 87.671959 c
335.25604 83.283043 l
335.25604 82.281174 334.37692 81.404266 333.37506 81.404266 c
h
364.71222 64.477554 m
363.77173 64.477554 362.83344 65.104538 362.83344 66.356323 c
362.83344 87.671745 l
362.83344 92.374161 359.0715 96.133896 354.36911 96.133896 c
349.66669 96.133896 345.90695 92.374161 345.90695 87.671745 c
345.90695 66.356323 l
345.90695 65.104538 344.96426 64.477554 344.02377 64.477554 c
343.08551 64.477554 342.14502 65.104538 342.14502 66.356323 c
342.14502 87.671745 l
342.14502 94.441467 347.59717 99.895828 354.36911 99.895828 c
361.13882 99.895828 366.591 94.441467 366.591 87.671745 c
366.591 66.356323 l
366.591 65.104538 365.65271 64.477554 364.71222 64.477554 c
h
394.48123 87.671959 m
394.48123 92.374374 390.7193 96.134117 386.01907 96.134117 c
381.31668 96.134117 377.55475 92.374374 377.55475 87.671959 c
377.55475 77.328842 l
377.55475 72.628624 381.31668 68.866692 386.01907 68.866692 c
390.7193 68.866692 394.48123 72.628624 394.48123 77.328842 c
394.48123 87.671959 l
h
394.48123 69.055229 m
392.35034 66.733612 389.34036 65.104759 386.01907 65.104759 c
379.24936 65.104759 373.79282 70.556931 373.79282 77.328842 c
373.79282 87.671959 l
373.79282 94.441681 379.24936 99.896049 386.01907 99.896049 c
392.78882 99.896049 398.24316 94.441681 398.24316 87.671959 c
398.24316 64.164276 l
398.24316 57.392361 392.78882 51.940193 386.01907 51.940193 c
382.57065 51.940193 377.87042 53.446281 375.80093 56.515453 c
375.54883 56.892525 375.48743 57.269596 375.48743 57.580898 c
375.48743 58.648533 376.42792 59.461864 377.43198 59.461864 c
377.93179 59.461864 378.49521 59.27552 378.93369 58.648533 c
378.93369 58.648533 378.99945 58.521381 379.24936 58.271461 c
380.93961 56.454071 383.57251 55.702126 386.01907 55.702126 c
390.7193 55.702126 394.48123 59.461864 394.48123 64.164276 c
394.48123 69.055229 l
h
426.12991 87.671959 m
426.12991 92.374374 422.36798 96.134117 417.66776 96.134117 c
412.96533 96.134117 409.2034 92.374374 409.2034 87.671959 c
409.2034 85.164009 l
426.12991 85.164009 l
426.12991 87.671959 l
h
428.01086 81.404266 m
409.2034 81.404266 l
409.2034 76.074867 l
409.2034 71.560989 413.46738 67.612717 418.29474 67.612717 c
420.67773 67.612717 423.56058 68.301086 425.37796 70.622696 c
425.81641 71.183914 426.44339 71.436028 426.94543 71.436028 c
427.9473 71.436028 428.88779 70.622696 428.88779 69.618637 c
428.88779 69.24157 428.76282 68.803116 428.51291 68.428238 c
426.12991 65.293297 422.11807 63.850784 418.29474 63.850784 c
411.71136 63.850784 405.44147 69.177994 405.44147 76.074867 c
405.44147 87.671959 l
405.44147 94.441681 410.89804 99.896049 417.66776 99.896049 c
424.43967 99.896049 429.89185 94.441681 429.89185 87.671959 c
429.89185 83.283043 l
429.89185 82.281174 429.01273 81.404266 428.01086 81.404266 c
h
215.17764 46.941605 m
193.55092 46.941605 l
193.55092 29.263157 l
213.29668 29.263157 l
214.54846 29.263157 215.17764 28.322674 215.17764 27.382193 c
215.17764 26.44171 214.54846 25.501226 213.29668 25.501226 c
193.55092 25.501226 l
193.55092 3.6859713 l
193.55092 2.4319942 192.60825 1.8050057 191.66777 1.8050057 c
190.72948 1.8050057 189.7868 2.4319942 189.7868 3.6859713 c
189.7868 48.820377 l
189.7868 49.822243 190.66371 50.701344 191.66777 50.701344 c
215.17764 50.701344 l
216.42943 50.701344 217.05641 49.76086 217.05641 48.820377 c
217.05641 47.882088 216.42943 46.941605 215.17764 46.941605 c
h
234.91463 1.1780171 m
228.14272 1.1780171 222.69054 6.6323791 222.69054 13.402102 c
222.69054 34.717518 l
222.69054 35.969303 223.63103 36.596291 224.5715 36.596291 c
225.51199 36.596291 226.45247 35.969303 226.45247 34.717518 c
226.45247 13.402102 l
226.45247 8.7018795 230.21222 4.9399481 234.91463 4.9399481 c
239.61703 4.9399481 243.37679 8.7018795 243.37679 13.402102 c
243.37679 34.717518 l
243.37679 35.969303 244.31726 36.596291 245.25775 36.596291 c
246.19823 36.596291 247.13872 35.969303 247.13872 34.717518 c
247.13872 13.402102 l
247.13872 6.6323791 241.68654 1.1780171 234.91463 1.1780171 c
h
277.22058 1.8052249 m
276.28009 1.8052249 275.3418 2.4322133 275.3418 3.6839981 c
275.3418 24.999416 l
275.3418 29.70183 271.57986 33.461571 266.87744 33.461571 c
262.17722 33.461571 258.41528 29.70183 258.41528 24.999416 c
258.41528 3.6839981 l
258.41528 2.4322133 257.47482 1.8052249 256.53433 1.8052249 c
255.59384 1.8052249 254.65337 2.4322133 254.65337 3.6839981 c
254.65337 24.999416 l
254.65337 31.769138 260.10773 37.223499 266.87744 37.223499 c
273.64719 37.223499 279.10153 31.769138 279.10153 24.999416 c
279.10153 3.6839981 l
279.10153 2.4322133 278.16324 1.8052249 277.22058 1.8052249 c
h
306.98959 24.999636 m
306.98959 29.702049 303.22766 33.461788 298.52744 33.461788 c
293.82501 33.461788 290.06308 29.702049 290.06308 24.999636 c
290.06308 13.402539 l
290.06308 8.7001257 293.82501 4.9403868 298.52744 4.9403868 c
303.22766 4.9403868 306.98959 8.7001257 306.98959 13.402539 c
306.98959 24.999636 l
h
306.98959 48.820816 m
306.98959 50.074791 307.93008 50.701782 308.87054 50.701782 c
309.81104 50.701782 310.75153 50.074791 310.75153 48.820816 c
310.75153 13.402539 l
310.75153 6.6328173 305.29935 1.1784556 298.52744 1.1784556 c
291.75772 1.1784556 286.30115 6.6328173 286.30115 13.402539 c
286.30115 24.999636 l
286.30115 31.769358 291.75772 37.223721 298.52744 37.223721 c
301.84872 37.223721 304.8587 35.594864 306.98959 33.273254 c
306.98959 48.820816 l
h
306.98959 48.820816 m
W*
0 0 432 114 rc
173.53502 129 m
444.89185 129 l
444.89185 -13.821983 l
173.53502 -13.821983 l
h
f
Q
q
127.84866 107.54816 m
87.015488 107.58104 l
85.287979 107.58323 83.887123 106.18237 83.887123 104.45486 c
83.887123 50.001133 l
116.81498 50.001133 l
118.72006 50.001133 119.74385 48.536697 119.74385 47.072262 c
119.74385 45.607826 118.72006 44.143394 116.81498 44.143394 c
83.887123 44.143394 l
83.887123 11.099343 l
83.887123 5.3599868 79.232933 0.70580262 73.493576 0.70580262 c
36.021149 0.70580262 l
16.128513 0.70580262 0 16.834316 0 36.726952 c
0 77.978851 l
0 97.878067 16.121937 114 36.021149 114 c
46.480457 114 60.278591 109.35239 67.105309 100.63813 c
67.541573 100.05717 67.830956 99.476227 67.830956 98.895279 c
67.830956 97.297112 66.232788 95.990524 64.781509 95.990524 c
63.908985 95.990524 63.183346 96.424591 62.457703 97.15242 c
62.457703 97.15242 62.021442 97.733376 61.00423 98.748398 c
54.298084 105.01828 45.103714 108.21461 35.918114 108.19049 c
19.202072 108.14664 5.8095093 94.252052 5.8095093 77.533821 c
5.8095093 36.726952 l
5.8095093 20.041603 19.3358 6.5153117 36.021149 6.5153117 c
73.381775 6.5153117 l
75.948921 6.5153117 78.029381 8.5957737 78.029381 11.162919 c
78.029381 106.11661 l
78.029381 110.16134 81.309013 113.44097 85.355942 113.44097 c
127.85085 113.44097 l
129.47752 113.44097 130.79726 112.12342 130.79726 110.49457 c
130.79726 110.49457 l
130.79726 108.86571 129.47752 107.54597 127.84866 107.54816 c
W*
0 0 432 114 rc
-15 129 m
145.79726 129 l
145.79726 -14.294197 l
-15 -14.294197 l
h
f
ep
end
