%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.3 (Build 15D21) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 483 120
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 483 120
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
255.44788 73.479118 m
255.44788 73.479118 255.11787 73.082199 254.45789 72.422211 c
250.83026 68.993042 245.81342 67.209229 240.86581 67.209229 c
231.49445 67.209229 223.84227 74.866013 223.84227 84.235085 c
223.84227 102.97552 l
223.84227 112.3469 231.49445 119.99908 240.86581 119.99908 c
245.81342 119.99908 252.28177 117.82296 255.44788 113.72919 c
255.78017 113.26765 255.90939 112.87305 255.90939 112.47613 c
255.90939 111.35461 254.91942 110.43155 253.86482 110.43155 c
253.33636 110.43155 252.80792 110.69693 252.4133 111.22308 c
252.4133 111.22308 252.14793 111.48846 251.75331 111.88537 c
248.8503 114.65456 244.82344 116.03915 240.86581 116.03915 c
233.67287 116.03915 227.8022 110.16617 227.8022 102.97552 c
227.8022 84.235085 l
227.8022 77.04213 233.67287 71.169159 240.86581 71.169159 c
244.75882 71.169159 249.77335 72.81913 252.4133 75.987534 c
252.80792 76.51368 253.33636 76.712135 253.86482 76.712135 c
254.98634 76.712135 256.04324 75.789078 256.04324 74.73217 c
256.04324 74.337563 255.84479 73.87603 255.44788 73.479118 c
h
284.0773 92.285095 m
284.0773 97.235008 280.11737 101.19263 275.16977 101.19263 c
270.21985 101.19263 266.25992 97.235008 266.25992 92.285095 c
266.25992 80.077614 l
266.25992 75.127701 270.21985 71.170082 275.16977 71.170082 c
280.11737 71.170082 284.0773 75.127701 284.0773 80.077614 c
284.0773 92.285095 l
h
275.16977 67.210152 m
268.04373 67.210152 262.30228 72.951584 262.30228 80.077614 c
262.30228 92.285095 l
262.30228 99.411125 268.04373 105.15257 275.16977 105.15257 c
282.2981 105.15257 288.03723 99.411125 288.03723 92.285095 c
288.03723 80.077614 l
288.03723 72.951584 282.2981 67.210152 275.16977 67.210152 c
h
317.06494 92.285095 m
317.06494 97.235008 313.10501 101.19263 308.15741 101.19263 c
303.20749 101.19263 299.24756 97.235008 299.24756 92.285095 c
299.24756 80.077614 l
299.24756 75.127701 303.20749 71.170082 308.15741 71.170082 c
313.10501 71.170082 317.06494 75.127701 317.06494 80.077614 c
317.06494 92.285095 l
h
317.06494 117.36005 m
317.06494 118.68002 318.05493 119.34001 319.0426 119.34001 c
320.03259 119.34001 321.02258 118.68002 321.02258 117.36005 c
321.02258 80.077614 l
321.02258 72.951584 315.28345 67.210152 308.15741 67.210152 c
301.02908 67.210152 295.28763 72.951584 295.28763 80.077614 c
295.28763 92.285095 l
295.28763 99.411125 301.02908 105.15257 308.15741 105.15257 c
311.6535 105.15257 314.81961 103.43798 317.06494 100.99418 c
317.06494 117.36005 l
h
350.37936 92.285095 m
350.37936 97.235008 346.41943 101.19263 341.47183 101.19263 c
336.52191 101.19263 332.56198 97.235008 332.56198 92.285095 c
332.56198 89.645142 l
350.37936 89.645142 l
350.37936 92.285095 l
h
352.35934 85.687523 m
332.56198 85.687523 l
332.56198 80.077614 l
332.56198 75.326164 337.05038 71.170082 342.13184 71.170082 c
344.64023 71.170082 347.6748 71.894684 349.58786 74.338486 c
350.04938 74.929245 350.70938 75.194626 351.23782 75.194626 c
352.29242 75.194626 353.28241 74.338486 353.28241 73.281578 c
353.28241 72.884666 353.15088 72.423134 352.88779 72.028526 c
350.37936 68.728584 346.15637 67.210152 342.13184 67.210152 c
335.20193 67.210152 328.60205 72.817741 328.60205 80.077614 c
328.60205 92.285095 l
328.60205 99.411125 334.34579 105.15257 341.47183 105.15257 c
348.60019 105.15257 354.33929 99.411125 354.33929 92.285095 c
354.33929 87.665176 l
354.33929 86.61058 353.41394 85.687523 352.35934 85.687523 c
h
395.10812 114.58855 m
393.91971 114.58855 392.86279 116.04007 390.15823 116.04007 c
386.32983 116.04007 384.08911 113.59857 384.08911 110.69555 c
384.08911 104.49258 l
393.9866 104.49258 l
395.30658 104.49258 395.96426 103.50259 395.96426 102.51492 c
395.96426 101.52263 395.30658 100.53265 393.9866 100.53265 c
384.08911 100.53265 l
384.08911 69.847794 l
384.08911 68.530128 383.0968 67.87014 382.10681 67.87014 c
381.11914 67.87014 380.12915 68.530128 380.12915 69.847794 c
380.12915 100.53265 l
374.12234 100.53265 l
372.80469 100.53265 372.14468 101.52263 372.14468 102.51492 c
372.14468 103.50259 372.80469 104.49258 374.12234 104.49258 c
380.12915 104.49258 l
380.12915 110.69555 l
380.12915 115.97546 384.35217 120 390.15823 120 c
392.40125 120 394.51276 119.34001 396.03119 118.41464 c
396.69119 117.95311 397.08578 117.29543 397.08578 116.70006 c
397.08578 115.64546 396.22736 114.58855 395.10812 114.58855 c
h
421.16614 92.285095 m
421.16614 97.235008 417.20621 101.19263 412.25861 101.19263 c
407.30869 101.19263 403.34875 97.235008 403.34875 92.285095 c
403.34875 80.077614 l
403.34875 75.127701 407.30869 71.170082 412.25861 71.170082 c
417.20621 71.170082 421.16614 75.127701 421.16614 80.077614 c
421.16614 92.285095 l
h
412.25861 67.210152 m
405.13257 67.210152 399.38882 72.951584 399.38882 80.077614 c
399.38882 92.285095 l
399.38882 99.411125 405.13257 105.15257 412.25861 105.15257 c
419.38464 105.15257 425.12607 99.411125 425.12607 92.285095 c
425.12607 80.077614 l
425.12607 72.951584 419.38464 67.210152 412.25861 67.210152 c
h
451.0484 98.554527 m
450.58685 98.554527 450.12534 98.752983 449.6615 99.147591 c
449.6615 99.147591 449.52997 99.279129 449.3338 99.410667 c
447.9469 100.53218 446.09848 101.19448 444.25235 101.19448 c
439.50092 101.19448 436.66479 97.760696 436.66479 91.823105 c
436.66479 69.84964 l
436.66479 68.529663 435.67252 67.869675 434.68253 67.869675 c
433.69254 67.869675 432.70486 68.529663 432.70486 69.84964 c
432.70486 91.823105 l
432.70486 99.147591 436.59558 105.15211 444.25235 105.15211 c
446.95694 105.15211 450.45303 103.96597 452.4353 101.91908 c
452.89682 101.45755 453.09528 100.99603 453.09528 100.53218 c
453.09528 99.477585 452.16992 98.554527 451.0484 98.554527 c
h
238.88654 49.410995 m
229.12056 49.410995 l
229.12056 24.532198 l
238.88654 24.532198 l
245.68257 24.532198 251.3571 29.943642 251.3571 36.938137 c
251.3571 43.868015 245.7495 49.410995 238.88654 49.410995 c
h
253.33707 1.8987441 m
252.74399 1.8987441 252.14862 2.1618164 251.75401 2.8241127 c
240.40266 20.639187 l
239.94113 20.574574 239.41499 20.574574 238.88654 20.574574 c
229.12056 20.574574 l
229.12056 3.8787098 l
229.12056 2.5587327 228.13057 1.8987441 227.14059 1.8987441 c
226.1483 1.8987441 225.16063 2.5587327 225.16063 3.8787098 c
225.16063 51.388653 l
225.16063 52.443249 226.08369 53.368618 227.14059 53.368618 c
238.88654 53.368618 l
247.92561 53.368618 255.31703 46.044132 255.31703 37.005058 c
255.31703 29.87672 250.83095 23.874516 244.56107 21.564556 c
255.05396 4.9356146 l
255.31703 4.5386982 255.44856 4.208704 255.44856 3.8117878 c
255.44856 2.7571907 254.39397 1.8987441 253.33707 1.8987441 c
h
283.48447 26.314167 m
283.48447 31.26408 279.52454 35.221703 274.57693 35.221703 c
269.62701 35.221703 265.66708 31.26408 265.66708 26.314167 c
265.66708 23.674212 l
283.48447 23.674212 l
283.48447 26.314167 l
h
285.46213 19.716589 m
265.66708 19.716589 l
265.66708 14.106686 l
265.66708 9.3552303 270.15546 5.1991482 275.23691 5.1991482 c
277.74301 5.1991482 280.77759 5.9237509 282.69061 8.3675547 c
283.15216 8.9583139 283.81445 9.2236938 284.3429 9.2236938 c
285.39749 9.2236938 286.38748 8.3675547 286.38748 7.3106499 c
286.38748 6.913734 286.25595 6.4522033 285.99289 6.0575948 c
283.48447 2.7576523 279.26144 1.239217 275.23691 1.239217 c
268.30704 1.239217 261.70715 6.8468118 261.70715 14.106686 c
261.70715 26.314167 l
261.70715 33.440197 267.4509 39.181633 274.57693 39.181633 c
281.70294 39.181633 287.4444 33.440197 287.4444 26.314167 c
287.4444 21.694246 l
287.4444 20.639648 286.51901 19.716589 285.46213 19.716589 c
h
303.80032 1.2387556 m
300.43579 1.2387556 295.81586 2.7571907 293.76898 5.7940612 c
293.50589 6.1886697 293.37207 6.5832782 293.37207 6.9132724 c
293.37207 8.034791 294.36435 8.8932381 295.41895 8.8932381 c
296.01431 8.8932381 296.54047 8.6947803 297.0043 8.034791 c
297.0043 8.034791 297.13583 7.9055629 297.332 7.7071047 c
298.98196 5.9902115 301.42575 5.1986866 303.80032 5.1986866 c
308.94641 5.1986866 312.11481 8.1686354 312.11481 11.667036 c
312.11481 21.036104 293.57053 17.604626 293.57053 29.747492 c
293.57053 36.012768 299.04889 39.181171 304.26187 39.181171 c
307.95874 39.181171 312.31094 37.201206 314.35785 33.970493 c
314.5563 33.638191 314.68784 33.243584 314.68784 32.846668 c
314.68784 31.789762 313.63324 30.933624 312.64325 30.933624 c
312.04788 30.933624 311.45483 31.196697 310.99329 31.858994 c
310.99329 31.858994 310.86176 31.988222 310.6633 32.320522 c
309.08023 34.099724 306.77029 35.223549 304.26187 35.223549 c
300.30194 35.223549 297.53046 32.978203 297.53046 29.747492 c
297.53046 21.564556 316.07242 24.599119 316.07242 11.667036 c
316.07242 5.2633009 310.33331 1.2387556 303.80032 1.2387556 c
h
324.64606 1.8989749 m
323.65607 1.8989749 322.6684 2.5589633 322.6684 3.8766329 c
322.6684 36.543758 l
322.6684 37.861427 323.65607 38.521416 324.64606 38.521416 c
325.63605 38.521416 326.62601 37.861427 326.62601 36.543758 c
326.62601 3.8766329 l
326.62601 2.5589633 325.63605 1.8989749 324.64606 1.8989749 c
h
324.64606 52.577324 m
326.09756 52.577324 327.28601 51.388885 327.28601 49.93737 c
327.28601 48.485859 326.09756 47.297417 324.64606 47.297417 c
323.19455 47.297417 322.0061 48.485859 322.0061 49.93737 c
322.0061 51.388885 323.19455 52.577324 324.64606 52.577324 c
h
341.20508 1.2387556 m
341.00662 1.2387556 340.67661 1.2387556 340.41354 1.3725994 c
340.41354 1.3725994 340.01663 1.501828 339.35663 1.9633584 c
335.92746 4.1440897 334.54056 8.3001709 334.54056 12.257795 c
334.54056 51.388653 l
334.54056 52.710938 335.53055 53.368618 336.52054 53.368618 c
337.50821 53.368618 338.50052 52.710938 338.50052 51.388653 c
338.50052 12.257795 l
338.50052 9.8186064 339.29202 6.1886697 341.86505 5.0648432 c
342.72351 4.6702342 343.1181 3.9456315 343.1181 3.2187212 c
343.1181 2.2287383 342.3266 1.2387556 341.20508 1.2387556 c
h
349.71246 1.8989749 m
348.72247 1.8989749 347.7348 2.5589633 347.7348 3.8766329 c
347.7348 36.543758 l
347.7348 37.861427 348.72247 38.521416 349.71246 38.521416 c
350.70245 38.521416 351.69241 37.861427 351.69241 36.543758 c
351.69241 3.8766329 l
351.69241 2.5589633 350.70245 1.8989749 349.71246 1.8989749 c
h
349.71246 52.577324 m
351.16397 52.577324 352.35242 51.388885 352.35242 49.93737 c
352.35242 48.485859 351.16397 47.297417 349.71246 47.297417 c
348.26096 47.297417 347.07251 48.485859 347.07251 49.93737 c
347.07251 51.388885 348.26096 52.577324 349.71246 52.577324 c
h
381.05499 26.314167 m
381.05499 31.26408 377.09506 35.221703 372.14746 35.221703 c
367.19754 35.221703 363.23761 31.26408 363.23761 26.314167 c
363.23761 23.674212 l
381.05499 23.674212 l
381.05499 26.314167 l
h
383.03497 19.716589 m
363.23761 19.716589 l
363.23761 14.106686 l
363.23761 9.3552303 367.72598 5.1991482 372.80743 5.1991482 c
375.31586 5.1991482 378.35043 5.9237509 380.26346 8.3675547 c
380.72501 8.9583139 381.38498 9.2236938 381.91345 9.2236938 c
382.96805 9.2236938 383.95801 8.3675547 383.95801 7.3106499 c
383.95801 6.913734 383.82648 6.4522033 383.56342 6.0575948 c
381.05499 2.7576523 376.832 1.239217 372.80743 1.239217 c
365.87756 1.239217 359.27768 6.8468118 359.27768 14.106686 c
359.27768 26.314167 l
359.27768 33.440197 365.02142 39.181633 372.14746 39.181633 c
379.27579 39.181633 385.01492 33.440197 385.01492 26.314167 c
385.01492 21.694246 l
385.01492 20.639648 384.08957 19.716589 383.03497 19.716589 c
h
416.01917 1.8989749 m
415.02917 1.8989749 414.03918 2.5589633 414.03918 3.8766329 c
414.03918 26.313936 l
414.03918 31.263849 410.08157 35.221474 405.13165 35.221474 c
400.18173 35.221474 396.22412 31.263849 396.22412 26.313936 c
396.22412 3.8766329 l
396.22412 2.5589633 395.23181 1.8989749 394.24185 1.8989749 c
393.25418 1.8989749 392.26419 2.5589633 392.26419 3.8766329 c
392.26419 26.313936 l
392.26419 33.439964 398.00333 39.181404 405.13165 39.181404 c
412.25769 39.181404 417.99683 33.439964 417.99683 26.313936 c
417.99683 3.8766329 l
417.99683 2.5589633 417.00912 1.8989749 416.01917 1.8989749 c
h
448.80627 6.0569024 m
448.80627 6.0569024 448.54321 5.7246008 448.08167 5.1984558 c
445.50635 2.4938877 441.74487 1.2385248 438.05032 1.2385248 c
430.72583 1.2385248 425.57977 5.7938304 425.57977 12.589866 c
425.57977 27.834217 l
425.57977 34.627945 430.72583 39.180943 438.05032 39.180943 c
441.68024 39.180943 446.63016 37.597893 448.80627 34.364872 c
449.06937 33.970264 449.13858 33.573349 449.13858 33.243355 c
449.13858 32.121834 448.1463 31.263388 447.09171 31.263388 c
446.56323 31.263388 445.97018 31.461845 445.50635 32.121834 c
445.50635 32.121834 445.44171 32.253372 445.17865 32.518749 c
443.39484 34.431793 440.62335 35.22332 438.05032 35.22332 c
432.57425 35.22332 429.53738 32.05722 429.53738 27.834217 c
429.53738 12.589866 l
429.53738 8.3668623 432.57425 5.1984558 438.05032 5.1984558 c
440.55872 5.1984558 443.9902 6.1215167 445.50635 8.2999411 c
445.97018 8.8930073 446.56323 9.1583872 447.09171 9.1583872 c
448.1463 9.1583872 449.20319 8.2999411 449.20319 7.2453437 c
449.20319 6.8484273 449.06937 6.4515114 448.80627 6.0569024 c
h
477.23956 26.314167 m
477.23956 31.26408 473.27963 35.221703 468.33203 35.221703 c
463.38211 35.221703 459.42218 31.26408 459.42218 26.314167 c
459.42218 23.674212 l
477.23956 23.674212 l
477.23956 26.314167 l
h
479.21951 19.716589 m
459.42218 19.716589 l
459.42218 14.106686 l
459.42218 9.3552303 463.91055 5.1991482 468.992 5.1991482 c
471.50043 5.1991482 474.53497 5.9237509 476.44803 8.3675547 c
476.90955 8.9583139 477.57187 9.2236938 478.09799 9.2236938 c
479.15259 9.2236938 480.14258 8.3675547 480.14258 7.3106499 c
480.14258 6.913734 480.01105 6.4522033 479.74799 6.0575948 c
477.23956 2.7576523 473.01654 1.239217 468.992 1.239217 c
462.06213 1.239217 455.46225 6.8468118 455.46225 14.106686 c
455.46225 26.314167 l
455.46225 33.440197 461.20599 39.181633 468.33203 39.181633 c
475.45804 39.181633 481.19949 33.440197 481.19949 26.314167 c
481.19949 21.694246 l
481.19949 20.639648 480.27411 19.716589 479.21951 19.716589 c
479.21951 19.716589 l
h
479.21951 19.716589 m
W*
0 0 483 120 rc
208.84227 135 m
496.19949 135 l
496.19949 -13.761476 l
208.84227 -13.761476 l
h
f
Q
q
163.13486 6.2950525 m
137.06993 47.103573 l
152.21043 51.75811 163.4464 65.878632 163.4464 82.482193 c
163.4464 102.96491 146.74591 119.41155 126.1432 119.41155 c
112.31113 119.41155 l
95.645264 119.41155 82.136269 105.90255 82.136269 89.238998 c
82.136269 52.63271 l
73.932564 52.63271 l
72.229515 52.63271 70.849541 51.252731 70.849541 49.549686 c
70.849541 47.846638 72.229515 46.466663 73.932564 46.466663 c
82.136269 46.466663 l
82.136269 44.989765 l
82.136269 23.93013 65.064255 6.8581195 44.00462 6.8581195 c
37.919342 6.8581195 l
20.353493 6.8581195 6.1152782 21.096334 6.1152782 38.659874 c
6.1152782 81.61451 l
6.1152782 99.210358 20.212727 113.83857 37.808575 113.88472 c
47.477638 113.9101 57.15593 110.54555 64.217346 103.94566 c
65.285789 102.87722 65.74501 102.26338 65.74501 102.26338 c
66.508842 101.49955 67.272675 101.04033 68.191124 101.04033 c
69.7211 101.04033 71.403374 102.418 71.403374 104.10027 c
71.403374 104.71181 71.096458 105.32333 70.637238 105.93486 c
63.451206 115.10778 48.926842 120 37.919342 120 c
16.972782 120 0 103.02953 0 82.08297 c
0 38.659874 l
0 17.717932 16.977398 0.74284112 37.919342 0.74284112 c
44.08308 0.74284112 l
68.504967 0.74284112 88.302315 20.54019 88.302315 44.962074 c
88.302315 46.466663 l
106.81199 46.466663 l
108.81503 46.466663 109.89501 48.008175 109.89501 49.549686 c
109.89501 51.091198 108.81503 52.63271 106.81199 52.63271 c
88.302315 52.63271 l
88.302315 89.349762 l
88.302315 102.54492 99.002899 113.23627 112.19805 113.22704 c
126.1432 113.20627 l
143.31212 113.20627 157.20419 99.549583 157.20419 82.482193 c
157.20419 68.594742 148.00589 56.864944 135.32765 52.976547 c
133.68921 52.475788 132.18694 51.476574 131.39542 49.955833 c
130.36159 47.968945 130.52081 45.698215 131.63771 43.944397 c
157.82726 2.8820348 l
158.45264 1.7951305 159.38954 1.4859052 160.32414 1.4859052 c
162.04333 1.4859052 163.60332 2.8820348 163.60332 4.5873895 c
163.60332 5.0535355 163.4464 5.674294 163.13486 6.2950525 c
W*
0 0 483 120 rc
-15 135 m
178.60332 135 l
178.60332 -14.257159 l
-15 -14.257159 l
h
f
ep
end
