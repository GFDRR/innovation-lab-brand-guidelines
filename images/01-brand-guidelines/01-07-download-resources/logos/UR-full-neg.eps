%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.3 (Build 15D21) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 510 105
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 510 105
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
186.754 59.8176 m
178.632 59.8176 172 66.451599 172 74.573601 c
172 103.2816 l
172 104.4276 172.858 104.9996 173.714 104.9996 c
174.57401 104.9996 175.42999 104.4276 175.42999 103.2816 c
175.42999 74.573601 l
175.42999 68.3396 180.52 63.249599 186.754 63.249599 c
192.98801 63.249599 198.078 68.3396 198.078 74.573601 c
198.078 103.2816 l
198.078 104.4276 198.936 104.9996 199.79401 104.9996 c
200.65199 104.9996 201.50999 104.4276 201.50999 103.2816 c
201.50999 74.573601 l
201.50999 66.451599 194.87601 59.8176 186.754 59.8176 c
h
228.9512 60.389801 m
228.0932 60.389801 227.2352 60.9618 227.2352 62.105801 c
227.2352 81.549797 l
227.2352 85.839798 223.80521 89.269798 219.5152 89.269798 c
215.2272 89.269798 211.7932 85.839798 211.7932 81.549797 c
211.7932 62.105801 l
211.7932 60.9618 210.93719 60.389801 210.07719 60.389801 c
209.22121 60.389801 208.3632 60.9618 208.3632 62.105801 c
208.3632 81.549797 l
208.3632 87.727798 213.3372 92.701797 219.5152 92.701797 c
225.69119 92.701797 230.66721 87.727798 230.66721 81.549797 c
230.66721 62.105801 l
230.66721 60.9618 229.8092 60.389801 228.9512 60.389801 c
h
256.10941 81.550003 m
256.10941 85.839996 252.6794 89.269997 248.3914 89.269997 c
244.10139 89.269997 240.6674 85.839996 240.6674 81.550003 c
240.6674 70.970001 l
240.6674 66.68 244.10139 63.25 248.3914 63.25 c
252.6794 63.25 256.10941 66.68 256.10941 70.970001 c
256.10941 81.550003 l
h
256.10941 103.282 m
256.10941 104.426 256.96939 105 257.82739 105 c
258.68341 105 259.5434 104.426 259.5434 103.282 c
259.5434 70.970001 l
259.5434 64.793999 254.5674 59.818001 248.3914 59.818001 c
242.21539 59.818001 237.2374 64.793999 237.2374 70.970001 c
237.2374 81.550003 l
237.2374 87.727997 242.21539 92.702003 248.3914 92.702003 c
251.4214 92.702003 254.1674 91.216003 256.10941 89.098 c
256.10941 103.282 l
h
284.98441 81.550003 m
284.98441 85.839996 281.55042 89.269997 277.26239 89.269997 c
272.97241 89.269997 269.54239 85.839996 269.54239 81.550003 c
269.54239 79.262001 l
284.98441 79.262001 l
284.98441 81.550003 l
h
286.69839 75.832001 m
269.54239 75.832001 l
269.54239 70.970001 l
269.54239 66.851997 273.43039 63.25 277.8364 63.25 c
280.00839 63.25 282.64041 63.877998 284.29639 65.996002 c
284.69839 66.508003 285.27039 66.737999 285.72641 66.737999 c
286.64041 66.737999 287.5004 65.996002 287.5004 65.080002 c
287.5004 64.737999 287.38641 64.337997 287.1564 63.993999 c
284.98441 61.133999 281.3244 59.818001 277.8364 59.818001 c
271.8284 59.818001 266.1084 64.678001 266.1084 70.970001 c
266.1084 81.550003 l
266.1084 87.727997 271.0864 92.702003 277.26239 92.702003 c
283.44241 92.702003 288.4144 87.727997 288.4144 81.550003 c
288.4144 77.547997 l
288.4144 76.632004 287.6124 75.832001 286.69839 75.832001 c
h
310.5976 86.983597 m
310.19958 86.983597 309.79761 87.155602 309.39761 87.499603 c
309.39761 87.499603 309.28159 87.611603 309.11359 87.7276 c
307.90961 88.697601 306.30759 89.271599 304.70761 89.271599 c
300.5896 89.271599 298.13361 86.2976 298.13361 81.149597 c
298.13361 62.107601 l
298.13361 60.961601 297.27359 60.389599 296.4136 60.389599 c
295.55759 60.389599 294.69958 60.961601 294.69958 62.107601 c
294.69958 81.149597 l
294.69958 87.499603 298.07361 92.701599 304.70761 92.701599 c
307.05161 92.701599 310.0816 91.673599 311.80161 89.899597 c
312.19958 89.499603 312.37161 89.099602 312.37161 88.697601 c
312.37161 87.7836 311.56961 86.983597 310.5976 86.983597 c
h
324.26181 59.8176 m
321.34381 59.8176 317.33981 61.133598 315.5658 63.765598 c
315.33981 64.109596 315.2218 64.4496 315.2218 64.737602 c
315.2218 65.707603 316.08179 66.451599 316.99579 66.451599 c
317.51181 66.451599 317.96979 66.279602 318.3718 65.707603 c
318.65579 65.423599 l
320.08578 63.937599 322.1998 63.249599 324.26181 63.249599 c
328.71979 63.249599 331.46579 65.823601 331.46579 68.855598 c
331.46579 76.975601 315.3938 74.001602 315.3938 84.525597 c
315.3938 89.957603 320.1398 92.701599 324.65979 92.701599 c
327.8638 92.701599 331.63779 90.987602 333.40979 88.1856 c
333.58179 87.899597 333.6958 87.555603 333.6958 87.211601 c
333.6958 86.2976 332.7818 85.553596 331.92181 85.553596 c
331.40979 85.553596 330.8938 85.781601 330.49179 86.355598 c
330.49179 86.355598 330.37979 86.467598 330.20779 86.7556 c
328.83578 88.2976 326.83179 89.271599 324.65979 89.271599 c
321.2298 89.271599 318.82779 87.327599 318.82779 84.525597 c
318.82779 77.433601 334.8978 80.063599 334.8978 68.855598 c
334.8978 63.307598 329.92181 59.8176 324.26181 59.8176 c
h
358.85159 61.878201 m
357.1376 60.618198 354.96561 59.818199 352.79361 59.818199 c
347.7576 59.818199 344.0976 63.308201 344.0976 67.882202 c
344.0976 88.698196 l
338.89359 88.698196 l
337.7496 88.698196 337.1796 89.558197 337.1796 90.416199 c
337.1796 91.272202 337.7496 92.130203 338.89359 92.130203 c
344.0976 92.130203 l
344.0976 99.394203 l
344.0976 100.5382 344.95761 101.1082 345.81161 101.1082 c
346.6716 101.1082 347.53159 100.5382 347.53159 99.394203 c
347.53159 92.130203 l
357.65161 92.130203 l
358.79761 92.130203 359.36761 91.272202 359.36761 90.416199 c
359.36761 89.558197 358.79761 88.698196 357.65161 88.698196 c
347.53159 88.698196 l
347.53159 67.882202 l
347.53159 65.366203 349.4736 63.250198 352.79361 63.250198 c
355.93759 63.250198 357.02359 65.308197 358.3396 65.308197 c
359.2536 65.308197 359.99561 64.450203 359.99561 63.536201 c
359.99561 62.792198 359.4256 62.336201 358.85159 61.878201 c
h
380.1796 76.7472 m
372.80161 75.145203 l
368.85559 74.2892 366.28159 71.999199 366.28159 69.083199 c
366.28159 65.5392 369.02759 63.249199 373.20361 63.249199 c
377.20761 63.249199 380.1796 65.939201 380.1796 69.655197 c
380.1796 76.7472 l
h
373.2576 59.8172 m
367.82761 59.8172 362.85159 63.021198 362.85159 69.027199 c
362.85159 74.745201 367.65561 77.547203 372.85959 78.633202 c
380.1796 80.179199 l
380.1796 82.867203 l
380.1796 86.699203 378.0076 89.271202 373.37561 89.271202 c
371.19958 89.271202 369.76959 88.585197 368.56961 87.669197 c
367.4256 86.755203 367.13959 85.839203 365.93759 85.839203 c
365.0816 85.839203 364.28159 86.527199 364.28159 87.499199 c
364.28159 88.127197 364.6796 88.699203 365.0816 89.157204 c
367.13959 91.501198 370.22559 92.703201 373.37561 92.703201 c
379.8356 92.703201 383.60959 88.585197 383.60959 82.867203 c
383.60959 69.655197 l
383.60959 63.765202 378.80759 59.8172 373.2576 59.8172 c
h
410.76959 60.389801 m
409.9136 60.389801 409.0556 60.9618 409.0556 62.105801 c
409.0556 81.549797 l
409.0556 85.839798 405.62561 89.269798 401.3356 89.269798 c
397.04361 89.269798 393.61359 85.839798 393.61359 81.549797 c
393.61359 62.105801 l
393.61359 60.9618 392.7536 60.389801 391.89761 60.389801 c
391.03961 60.389801 390.18359 60.9618 390.18359 62.105801 c
390.18359 81.549797 l
390.18359 87.727798 395.15561 92.701797 401.3356 92.701797 c
407.5116 92.701797 412.48361 87.727798 412.48361 81.549797 c
412.48361 62.105801 l
412.48361 60.9618 411.62961 60.389801 410.76959 60.389801 c
h
437.9296 81.550003 m
437.9296 85.839996 434.49561 89.269997 430.20761 89.269997 c
425.9176 89.269997 422.48761 85.839996 422.48761 81.550003 c
422.48761 70.970001 l
422.48761 66.68 425.9176 63.25 430.20761 63.25 c
434.49561 63.25 437.9296 66.68 437.9296 70.970001 c
437.9296 81.550003 l
h
437.9296 103.282 m
437.9296 104.426 438.78561 105 439.64359 105 c
440.5036 105 441.35959 104.426 441.35959 103.282 c
441.35959 70.970001 l
441.35959 64.793999 436.3876 59.818001 430.20761 59.818001 c
424.03159 59.818001 419.05359 64.793999 419.05359 70.970001 c
419.05359 81.550003 l
419.05359 87.727997 424.03159 92.702003 430.20761 92.702003 c
433.23761 92.702003 435.98361 91.216003 437.9296 89.098 c
437.9296 103.282 l
h
449.9296 60.389801 m
449.07361 60.389801 448.21561 60.9618 448.21561 62.105801 c
448.21561 90.415802 l
448.21561 91.559799 449.07361 92.129799 449.9296 92.129799 c
450.78961 92.129799 451.64761 91.559799 451.64761 90.415802 c
451.64761 62.105801 l
451.64761 60.9618 450.78961 60.389801 449.9296 60.389801 c
h
449.9296 104.3118 m
451.18759 104.3118 452.2196 103.2818 452.2196 102.0238 c
452.2196 100.7658 451.18759 99.737801 449.9296 99.737801 c
448.6716 99.737801 447.64359 100.7658 447.64359 102.0238 c
447.64359 103.2818 448.6716 104.3118 449.9296 104.3118 c
h
479.09381 60.389801 m
478.23779 60.389801 477.37979 60.9618 477.37979 62.105801 c
477.37979 81.549797 l
477.37979 85.839798 473.9498 89.269798 469.65979 89.269798 c
465.3678 89.269798 461.93781 85.839798 461.93781 81.549797 c
461.93781 62.105801 l
461.93781 60.9618 461.07779 60.389801 460.2218 60.389801 c
459.3638 60.389801 458.50781 60.9618 458.50781 62.105801 c
458.50781 81.549797 l
458.50781 87.727798 463.4798 92.701797 469.65979 92.701797 c
475.83578 92.701797 480.8078 87.727798 480.8078 81.549797 c
480.8078 62.105801 l
480.8078 60.9618 479.9538 60.389801 479.09381 60.389801 c
h
506.254 81.550003 m
506.254 85.839996 502.82001 89.269997 498.53201 89.269997 c
494.242 89.269997 490.81201 85.839996 490.81201 81.550003 c
490.81201 72.113998 l
490.81201 67.825996 494.242 64.393997 498.53201 64.393997 c
502.82001 64.393997 506.254 67.825996 506.254 72.113998 c
506.254 81.550003 l
h
506.254 64.566002 m
504.30801 62.448002 501.56201 60.962002 498.53201 60.962002 c
492.35599 60.962002 487.37799 65.938004 487.37799 72.113998 c
487.37799 81.550003 l
487.37799 87.727997 492.35599 92.702003 498.53201 92.702003 c
504.71201 92.702003 509.68399 87.727997 509.68399 81.550003 c
509.68399 60.104 l
509.68399 53.925999 504.71201 48.952 498.53201 48.952 c
495.38599 48.952 491.09799 50.326 489.21201 53.127998 c
488.98001 53.470001 488.92599 53.813999 488.92599 54.098 c
488.92599 55.071999 489.78201 55.816002 490.70001 55.816002 c
491.15601 55.816002 491.668 55.644001 492.07001 55.071999 c
492.07001 55.071999 492.13 54.958 492.35599 54.728001 c
493.89801 53.07 496.29999 52.383999 498.53201 52.383999 c
502.82001 52.383999 506.254 55.816002 506.254 60.104 c
506.254 64.566002 l
h
184.4668 44.389801 m
176.00481 44.389801 l
176.00481 22.8298 l
184.4668 22.8298 l
190.3568 22.8298 195.2748 27.517799 195.2748 33.581799 c
195.2748 39.587799 190.41479 44.389801 184.4668 44.389801 c
h
196.9928 3.2138 m
196.47681 3.2138 195.9608 3.4418001 195.6188 4.0158 c
185.78081 19.455799 l
185.3828 19.3978 184.9248 19.3978 184.4668 19.3978 c
176.00481 19.3978 l
176.00481 4.9298 l
176.00481 3.7858 175.14481 3.2138 174.2868 3.2138 c
173.4288 3.2138 172.5708 3.7858 172.5708 4.9298 c
172.5708 46.105801 l
172.5708 47.019798 173.3708 47.8218 174.2868 47.8218 c
184.4668 47.8218 l
192.3008 47.8218 198.7068 41.473801 198.7068 33.637798 c
198.7068 27.4618 194.8188 22.257799 189.3848 20.257799 c
198.47881 5.8457999 l
198.7068 5.5018001 198.8208 5.2157998 198.8208 4.8717999 c
198.8208 3.9558001 197.9068 3.2138 196.9928 3.2138 c
h
206.248 3.214 m
205.39 3.214 204.532 3.786 204.532 4.928 c
204.532 33.237999 l
204.532 34.382 205.39 34.953999 206.248 34.953999 c
207.106 34.953999 207.964 34.382 207.964 33.237999 c
207.964 4.928 l
207.964 3.786 207.106 3.214 206.248 3.214 c
h
206.248 47.136002 m
207.508 47.136002 208.536 46.105999 208.536 44.846001 c
208.536 43.588001 207.508 42.560001 206.248 42.560001 c
204.99001 42.560001 203.96001 43.588001 203.96001 44.846001 c
203.96001 46.105999 204.99001 47.136002 206.248 47.136002 c
h
222.7148 2.6417999 m
219.7988 2.6417999 215.7968 3.9558001 214.0228 6.5878 c
213.7928 6.9317999 213.6788 7.2737999 213.6788 7.5598001 c
213.6788 8.5318003 214.5388 9.2757998 215.4528 9.2757998 c
215.9688 9.2757998 216.4248 9.1037998 216.8248 8.5318003 c
217.11079 8.2458 l
218.5408 6.7598 220.6568 6.0738001 222.7148 6.0738001 c
227.1748 6.0738001 229.92281 8.6457996 229.92281 11.6778 c
229.92281 19.7978 213.8508 16.8258 213.8508 27.347799 c
213.8508 32.7798 218.5968 35.525799 223.11681 35.525799 c
226.3188 35.525799 230.0928 33.809799 231.86681 31.007799 c
232.0388 30.7218 232.1528 30.3778 232.1528 30.035801 c
232.1528 29.119801 231.2388 28.375799 230.3788 28.375799 c
229.86279 28.375799 229.3488 28.605801 228.94881 29.177799 c
228.94881 29.177799 228.83681 29.2918 228.66479 29.577801 c
227.2908 31.121799 225.2888 32.095798 223.11681 32.095798 c
219.6828 32.095798 217.28281 30.149799 217.28281 27.347799 c
217.28281 20.257799 233.3508 22.885799 233.3508 11.6778 c
233.3508 6.1297998 228.3788 2.6417999 222.7148 2.6417999 c
h
259.082 3.214 m
258.62399 3.214 258.168 3.3859999 257.76999 3.9000001 c
247.01601 18.195999 l
242.5 12.878 l
242.5 4.928 l
242.5 3.786 241.64 3.214 240.782 3.214 c
239.92599 3.214 239.06599 3.786 239.06599 4.928 c
239.06599 46.105999 l
239.06599 47.25 239.92599 47.821999 240.782 47.821999 c
241.64 47.821999 242.5 47.25 242.5 46.105999 c
242.5 18.139999 l
256.34 34.326 l
256.73801 34.782001 257.19601 35.009998 257.59799 35.009998 c
258.57001 35.009998 259.42599 34.153999 259.42599 33.237999 c
259.42599 32.896 259.254 32.495998 258.96799 32.152 c
249.304 20.886 l
260.51199 5.9580002 l
260.79999 5.6160002 260.914 5.2719998 260.914 4.928 c
260.914 3.9560001 260 3.214 259.082 3.214 c
h
259.082 3.214 m
W*
0 0 510 105 rc
157 120 m
524.68402 120 l
524.68402 -12.3582 l
157 -12.3582 l
h
f
Q
0.80000001 0 0 sc
q
60.953999 102.342 m
60.953999 103.804 62.155998 105 63.627998 105 c
87.419998 105 l
105.064 105 119.366 90.914001 119.366 73.372002 c
119.366 59.153999 109.742 47.060001 96.776001 43.074001 c
119.1 8.1239996 l
119.366 7.592 119.5 7.0619998 119.5 6.6620002 c
119.5 5.1999998 118.164 4.0040002 116.694 4.0040002 c
115.892 4.0040002 115.09 4.27 114.556 5.1999998 c
92.125999 40.368 l
91.601997 41.189999 91.323997 42.141998 91.323997 43.116001 c
91.323997 43.116001 l
91.323997 45.394001 92.835999 47.377998 95.019997 48.023998 c
106.014 51.27 114.02 61.382 114.02 73.372002 c
114.02 87.989998 102.124 99.683998 87.419998 99.683998 c
66.300003 99.683998 l
66.300003 35.632 l
66.300003 17.426001 51.464001 2.6760001 33.150002 2.6760001 c
14.838 2.6760001 0 17.426001 0 35.632 c
0 102.342 l
0 104.07 1.3380001 105 2.674 105 c
4.0100002 105 5.348 104.07 5.348 102.342 c
5.348 35.632 l
5.348 20.35 17.778 7.9920001 33.150002 7.9920001 c
48.521999 7.9920001 60.953999 20.35 60.953999 35.632 c
60.953999 102.342 l
h
60.953999 102.342 m
W*
0 0 510 105 rc
-15 120 m
134.5 120 l
134.5 -12.324 l
-15 -12.324 l
h
f
ep
end
